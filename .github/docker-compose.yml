# Copyright 2023 The Cockroach Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# This compose file contains recipes that are called from the GitHub
# Actions workflows. Host networking is used, because it simplifies
# the connectivity from the cockroach process back to the Replicator
# test rig.
#
# Note that the names of the services in this file must align with
# the integration matrix variable in workflows/tests.yaml, as well
# as the values passed to sinktest.IntegrationMain.
version: "3.9"
volumes:
  minio_data:
services:
  # These are older versions of CRDB that we want to support as sources,
  # but not as staging or as a target. The network_mode is host so that
  # outgoing changefeed network requests can connect to the test server.
  source-cockroachdb-v20.1:
    image: cockroachdb/cockroach:latest-v20.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v20.2:
    image: cockroachdb/cockroach:latest-v20.2
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v21.1:
    image: cockroachdb/cockroach:latest-v21.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v21.2:
    image: cockroachdb/cockroach:latest-v21.2
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v22.1:
    image: cockroachdb/cockroach:latest-v22.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v22.2:
    image: cockroachdb/cockroach:latest-v22.2
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v23.1:
    image: cockroachdb/cockroach:latest-v23.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v23.2:
    image: cockroachdb/cockroach:latest-v23.2
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081
  source-cockroachdb-v24.1:
    image: cockroachdb/cockroach:latest-v24.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5400 --http-addr :8081

  # These versions of CRDB are supported for staging and target operations.
  cockroachdb-v23.1:
    image: cockroachdb/cockroach:latest-v23.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G

  cockroachdb-v23.2:
    image: cockroachdb/cockroach:latest-v23.2
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G

  cockroachdb-v24.1:
    image: cockroachdb/cockroach:latest-v24.1
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G

  cockroachdb-unstable:
    image: cockroachdb/cockroach-unstable:latest
    network_mode: host
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G

  # This target exists to verify split-mode operation, where staging is separate from the target.
  target-cockroachdb-v24.1:
    image: cockroachdb/cockroach:latest-v24.1
    entrypoint: /cockroach/cockroach
    command: start-single-node --insecure --store type=mem,size=2G --listen-addr :5401 --http-addr :8082
    ports:
      - "5401:5401"
      - "8082:8082"

  # Single broker kafka cluster
  kafka-v7.6:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper-v7.6
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-v7.6:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-v7.6:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  zookeeper-v7.6:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  objstore:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=SoupOrSecret
    volumes:
      - minio_data:/data
    ports:
      - 9100:9000
      - 9101:9001

  mysql-v5.7:
    image: mysql:5.7
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: SoupOrSecret
      MYSQL_DATABASE: _replicator
    command:
      --default-authentication-plugin=mysql_native_password
      --gtid-mode=on
      --enforce-gtid-consistency=on
      --binlog-row-image=full
      --server-id=1
      --log-bin=log-bin
    ports:
      - "3306:3306"
  mysql-v5.6:
    image: mysql:5.6
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: SoupOrSecret
      MYSQL_DATABASE: _replicator
    command:
      --default-authentication-plugin=mysql_native_password
      --gtid-mode=on
      --enforce-gtid-consistency=on
      --server-id=1
      --log-bin=mysql-binlog
      --binlog-format=row
      --binlog-row-image=full
      --log-slave-updates=ON
    ports:
      - "3306:3306"
  mysql-v8:
    image: mysql:8-debian
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: SoupOrSecret
      MYSQL_DATABASE: _replicator
    command:
      --default-authentication-plugin=mysql_native_password
      --gtid-mode=on
      --enforce-gtid-consistency=on
      --binlog-row-metadata=full
    ports:
      - "3306:3306"
  mysql-mariadb-v10:
    image: mariadb:10
    platform: linux/x86_64
    environment:
      MARIADB_ROOT_PASSWORD: SoupOrSecret
      MARIADB_DATABASE: _replicator
    command:
      --log-bin
      --server_id=1
      --log-basename=master1
      --binlog-format=row
      --binlog-row-metadata=full
    ports:
      - "3306:3306"
  oracle-v18.4:
    # Use a private mirror of the image to speed up CI tests. The original is at
    # container-registry.oracle.com/database/express:18.4.0-xe
    image: ghcr.io/cockroachdb/cdc-sink/oracle-express:18.4.0-xe
    platform: linux/x86_64
    environment:
      ORACLE_PWD: SoupOrSecret
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - ./oracle-init:/docker-entrypoint-initdb.d/startup
  oracle-v21.3:
    # Use a private mirror of the image to speed up CI tests. The original is at
    # container-registry.oracle.com/database/express:21.3.0-xe
    build: ./oracle-nne
    platform: linux/x86_64
    environment:
      ORACLE_PWD: SoupOrSecret
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - ./oracle-init:/docker-entrypoint-initdb.d/startup
  postgresql-v11:
    image: postgres:11
    environment:
      POSTGRES_PASSWORD: SoupOrSecret
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=512
  postgresql-v12:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: SoupOrSecret
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=512
  postgresql-v13:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: SoupOrSecret
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=512
  postgresql-v14:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: SoupOrSecret
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=512
  postgresql-v15:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: SoupOrSecret
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_connections=512

